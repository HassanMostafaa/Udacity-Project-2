{"version":3,"sources":["BooksAPI.js","components/Search.js","components/shelvs/CurrentlyReading.js","components/shelvs/WantToRead.js","components/shelvs/Read.js","components/Home.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","books","update","book","shelf","id","method","body","JSON","stringify","search","query","Search","state","Books","searchResult","emptyQuery","updateQuery","a","setState","BooksAPI","error","console","log","event","target","value","swal","title","text","icon","defeat","button","className","to","autoFocus","type","this","onChange","e","placeholder","map","motion","div","layout","whileHover","opacity","imageLinks","onClick","window","location","href","previewLink","style","width","height","backgroundImage","smallThumbnail","backgroundPosition","backgroundSize","props","changeShelvs","addBook","disabled","shelfedBook","some","thisbook","authors","author","index","Component","CurrentlyReading","shekf","WantToRead","Read","Home","val","BooksApp","result","path","exact","resault","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61160114.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token;\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport PropTypes from \"prop-types\";\nimport { motion } from \"framer-motion\";\nimport swal from \"sweetalert\";\n\nclass Search extends Component {\n  static propTypes = {\n    changeShelvs: PropTypes.func.isRequired,\n  };\n\n  state = {\n    query: \"\",\n    Books: [],\n    searchResult: [],\n    emptyQuery: \"\",\n  };\n\n  updateQuery = async (query) => {\n    this.setState(() => ({\n      query: query,\n    }));\n    await BooksAPI.search(query).then((data) => {\n      if (data) {\n        if (!data.error) {\n          this.setState(() => ({ searchResult: data, emptyQuery: \"\" }));\n        } else {\n          this.setState(() => ({\n            searchResult: [],\n            emptyQuery: data.error + \": No Results\",\n          }));\n        }\n      }\n    });\n  };\n\n  componentDidMount() {\n    BooksAPI.getAll().then((Books) => {\n      this.setState({ Books });\n      console.log(this.state.Books);\n    });\n  }\n\n  addBook(event) {\n    if (event.target.value !== \"none\") {\n      swal({\n        title: \"Book Added!\",\n        text: `Book Successfuly Added to ${event.target.value} Shelf Visit Home Page to Check it out`,\n        icon: \"success\",\n        defeat: true,\n      });\n    } else {\n      swal({\n        title: \"Book Removed!\",\n        icon: \"success\",\n        button: true,\n      });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n            <Link to=\"/\">\n              <button className=\"close-search\">Close</button>\n            </Link>\n            <div className=\"search-books-input-wrapper\">\n              <input\n                autoFocus\n                type=\"text\"\n                value={this.state.query}\n                onChange={(e) => {\n                  this.updateQuery(e.target.value);\n                }}\n                placeholder=\"Search by Title or Topic...\"\n              />\n            </div>\n          </div>\n          <div className=\"search-books-results\">\n            {this.state.query !== \"\" && <h3>{this.state.emptyQuery}</h3>}\n            {this.state.query === \"\" ? (\n              <div>\n                <h3>We have a huge library of books for the following :</h3>\n                <p>\n                  Android, Art, Artificial Intelligence, Astronomy, Austen ,\n                  Baseball, Basketball, Bhagat, Biography, Brief, Business ,\n                  Camus, Cervantes, Christie, Classics, Comics, Cook, Cricket ,\n                  Cycling, Desai, Design, Development, Digital Marketing ,\n                  Drama, Drawing, Dumas, Education, Everything, Fantasy, Film ,\n                  Finance, First, Fitness, Football, Future, Games, Gandhi ,\n                  Homer, Horror, Hugo, Ibsen, Journey, Kafka, King, Lahiri ,\n                  Larsson, Learn, Literary Fiction, Make, Manage, Marquez ,\n                  Money, Mystery, Negotiate, Painting, Philosophy, Photography,\n                  Poetry, Production, Programming, React, Redux , River,\n                  Robotics, Rowling, Satire, Science Fiction , Shakespeare,\n                  Singh, Swimming, Tale, Thrun, Time, Tolstoy , Travel,\n                  Ultimate, Virtual Reality, Web Development, iOS\n                </p>\n              </div>\n            ) : (\n              <ol className=\"books-grid\">\n                {this.state.searchResult.map((book) => (\n                  <motion.div\n                    className=\"book\"\n                    key={book.id}\n                    layout\n                    whileHover={{ opacity: 1 }}\n                  >\n                    <div className=\"book-top\">\n                      {book.imageLinks ? (\n                        <div\n                          onClick={() => {\n                            window.location.href = `${book.previewLink}`;\n                          }}\n                          className=\"book-cover\"\n                          style={{\n                            width: 128,\n                            height: 193,\n                            backgroundImage: `url(${book.imageLinks.smallThumbnail})`,\n                          }}\n                        ></div>\n                      ) : (\n                        <div\n                          className=\"book-cover\"\n                          style={{\n                            width: 128,\n                            height: 193,\n                            backgroundPosition: \"center\",\n                            backgroundSize: \"cover\",\n                            backgroundImage: `url(https://www.atehno.md/theme/images/no_image.png)`,\n                          }}\n                        ></div>\n                      )}\n                      <div className=\"book-shelf-changer\">\n                        <select\n                          onChange={(event) => {\n                            this.props.changeShelvs(book, event.target.value);\n                            this.addBook(event);\n                          }}\n                          value=\"move\"\n                        >\n                          <option disabled value=\"move\">\n                            Move to...\n                          </option>\n                          <option value=\"currentlyReading\">\n                            {this.state.Books.map((shelfedBook) => {\n                              if (shelfedBook.id === book.id) {\n                                if (shelfedBook.shelf === \"currentlyReading\") {\n                                  return \"✔️ \";\n                                } else {\n                                  return \"\";\n                                }\n                              } else {\n                                return false;\n                              }\n                            })}\n                            Currently Reading &nbsp;\n                          </option>\n                          <option value=\"wantToRead\">\n                            {this.state.Books.map((shelfedBook) => {\n                              if (shelfedBook.id === book.id) {\n                                if (shelfedBook.shelf === \"wantToRead\") {\n                                  return \"✔️ \";\n                                } else {\n                                  return \"\";\n                                }\n                              } else {\n                                return false;\n                              }\n                            })}\n                            Want To Read\n                          </option>\n                          <option value=\"read\">\n                            {this.state.Books.map((shelfedBook) => {\n                              if (shelfedBook.id === book.id) {\n                                if (shelfedBook.shelf === \"read\") {\n                                  return \"✔️ \";\n                                } else {\n                                  return \"\";\n                                }\n                              } else {\n                                return false;\n                              }\n                            })}\n                            Read\n                          </option>\n\n                          <option value=\"none\">\n                            {this.state.Books.some(\n                              (thisbook) => thisbook[\"id\"] === book.id\n                            )\n                              ? \"None\"\n                              : \"✔️ None\"}\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"book-title\">{book.title}</div>\n                    {book.authors ? (\n                      <div className=\"book-authors\">\n                        {book.authors.map((author, index) => (\n                          <div key={index}>- {author}</div>\n                        ))}\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </motion.div>\n                ))}\n              </ol>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { motion } from \"framer-motion\";\n\nclass CurrentlyReading extends Component {\n  static propTypes = {\n    Books: PropTypes.array.isRequired,\n    changeShelvs: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <div className=\"bookshelf\">\n        <h2 className=\"bookshelf-title\">Currently Reading</h2>\n        <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">\n            {this.props.Books.map((book) =>\n              book.shelf === \"currentlyReading\" ? (\n                <motion.div\n                  className=\"book\"\n                  key={book.id}\n                  whileHover={{ opacity: 1 }}\n                  layout\n                >\n                  <div className=\"book-top\">\n                    {book.imageLinks ? (\n                      <div\n                        onClick={() => {\n                          window.location.href = `${book.previewLink}`;\n                        }}\n                        className=\"book-cover\"\n                        style={{\n                          width: 128,\n                          height: 193,\n                          backgroundImage: `url(${book.imageLinks.smallThumbnail})`,\n                        }}\n                      ></div>\n                    ) : (\n                      <div\n                        className=\"book-cover\"\n                        style={{\n                          width: 128,\n                          height: 193,\n                          backgroundPosition: \"center\",\n                          backgroundSize: \"cover\",\n                          backgroundImage: `url(https://www.atehno.md/theme/images/no_image.png)`,\n                        }}\n                      ></div>\n                    )}\n                    <div className=\"book-shelf-changer\">\n                      <select\n                        onChange={(e) => {\n                          this.props.changeShelvs(book, e.target.value);\n                        }}\n                        value=\"move\"\n                      >\n                        <option disabled value=\"move\">\n                          Move to...\n                        </option>\n                        {book.shelf === \"currentlyReading\" ? (\n                          <option value=\"currentlyReading\">\n                            ✔️ Currently Reading &nbsp;\n                          </option>\n                        ) : (\n                          <option value=\"currentlyReading\">\n                            Currently Reading &nbsp;\n                          </option>\n                        )}\n                        {book.shelf === \"wantToRead\" ? (\n                          <option value=\"wantToRead\">✔️ Want to Read</option>\n                        ) : (\n                          <option value=\"wantToRead\">Want to Read</option>\n                        )}\n                        {book.shelf === \"read\" ? (\n                          <option value=\"read\">✔️ Read</option>\n                        ) : (\n                          <option value=\"read\">Read</option>\n                        )}\n                        {book.shelf !== \"currentlyReading\" ||\n                        book.shekf !== \"read\" ||\n                        book.shelf !== \"wantToRead\" ? (\n                          <option value=\"none\">None</option>\n                        ) : (\n                          <option value=\"none\">✔️ None</option>\n                        )}\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"book-title\">{book.title}</div>\n                  {book.authors ? (\n                    <div className=\"book-authors\">\n                      {book.authors.map((author, index) => (\n                        <div key={index}>- {author}</div>\n                      ))}\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </motion.div>\n              ) : (\n                \"\"\n              )\n            )}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CurrentlyReading;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { motion } from \"framer-motion\";\n\nclass WantToRead extends Component {\n  state = {};\n\n  static propTypes = {\n    Books: PropTypes.array.isRequired,\n    changeShelvs: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <div className=\"bookshelf\">\n        <h2 className=\"bookshelf-title\">Want to Read</h2>\n        <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">\n            {this.props.Books.map(\n              (book) =>\n                book.shelf === \"wantToRead\" && (\n                  <motion.div\n                    className=\"book\"\n                    key={book.id}\n                    whileHover={{ opacity: 1 }}\n                    layout\n                  >\n                    <div className=\"book-top\">\n                      {book.imageLinks ? (\n                        <div\n                          onClick={() => {\n                            window.location.href = `${book.previewLink}`;\n                          }}\n                          className=\"book-cover\"\n                          style={{\n                            width: 128,\n                            height: 193,\n                            backgroundImage: `url(${book.imageLinks.smallThumbnail})`,\n                          }}\n                        ></div>\n                      ) : (\n                        <div\n                          className=\"book-cover\"\n                          style={{\n                            width: 128,\n                            height: 193,\n                            backgroundPosition: \"center\",\n                            backgroundSize: \"cover\",\n                            backgroundImage: `url(https://www.atehno.md/theme/images/no_image.png)`,\n                          }}\n                        ></div>\n                      )}\n                      <div className=\"book-shelf-changer\">\n                        <select\n                          onChange={(event) => {\n                            this.props.changeShelvs(book, event.target.value);\n                          }}\n                          value=\"move\"\n                        >\n                          <option disabled value=\"move\">\n                            Move to...\n                          </option>\n                          {book.shelf === \"currentlyReading\" ? (\n                            <option value=\"currentlyReading\">\n                              ✔️ Currently Reading &nbsp;\n                            </option>\n                          ) : (\n                            <option value=\"currentlyReading\">\n                              Currently Reading &nbsp;\n                            </option>\n                          )}\n                          {book.shelf === \"wantToRead\" ? (\n                            <option value=\"wantToRead\">✔️ Want to Read</option>\n                          ) : (\n                            <option value=\"wantToRead\">Want to Read</option>\n                          )}\n                          {book.shelf === \"read\" ? (\n                            <option value=\"read\">✔️ Read</option>\n                          ) : (\n                            <option value=\"read\">Read</option>\n                          )}\n                          {book.shelf !== \"currentlyReading\" ||\n                          book.shekf !== \"read\" ||\n                          book.shelf !== \"wantToRead\" ? (\n                            <option value=\"none\">None</option>\n                          ) : (\n                            <option value=\"none\">✔️ None</option>\n                          )}\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"book-title\">{book.title}</div>\n                    {book.authors ? (\n                      <div className=\"book-authors\">\n                        {book.authors.map((author, index) => (\n                          <div key={index}>- {author}</div>\n                        ))}\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </motion.div>\n                )\n            )}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WantToRead;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { motion } from \"framer-motion\";\n\nclass Read extends Component {\n  state = {};\n\n  static propTypes = {\n    Books: PropTypes.array.isRequired,\n    changeShelvs: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <div className=\"bookshelf\">\n        <h2 className=\"bookshelf-title\"> Read</h2>\n        <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">\n            {this.props.Books.map(\n              (book) =>\n                book.shelf === \"read\" && (\n                  <motion.div\n                    className=\"book\"\n                    key={book.id}\n                    whileHover={{ opacity: 1 }}\n                    layout\n                  >\n                    <div className=\"book-top\">\n                      {book.imageLinks ? (\n                        <div\n                          onClick={() => {\n                            window.location.href = `${book.previewLink}`;\n                          }}\n                          className=\"book-cover\"\n                          style={{\n                            width: 128,\n                            height: 193,\n                            backgroundImage: `url(${book.imageLinks.smallThumbnail})`,\n                          }}\n                        ></div>\n                      ) : (\n                        <div\n                          className=\"book-cover\"\n                          style={{\n                            width: 128,\n                            height: 193,\n                            backgroundPosition: \"center\",\n                            backgroundSize: \"cover\",\n                            backgroundImage: `url(https://www.atehno.md/theme/images/no_image.png)`,\n                          }}\n                        ></div>\n                      )}\n                      <div className=\"book-shelf-changer\">\n                        <select\n                          onChange={(event) => {\n                            this.props.changeShelvs(book, event.target.value);\n                          }}\n                          value=\"move\"\n                        >\n                          <option disabled value=\"move\">\n                            Move to...\n                          </option>\n\n                          {book.shelf === \"currentlyReading\" ? (\n                            <option value=\"currentlyReading\">\n                              ✔️ Currently Reading &nbsp;\n                            </option>\n                          ) : (\n                            <option value=\"currentlyReading\">\n                              Currently Reading &nbsp;\n                            </option>\n                          )}\n                          {book.shelf === \"wantToRead\" ? (\n                            <option value=\"wantToRead\">✔️ Want to Read</option>\n                          ) : (\n                            <option value=\"wantToRead\">Want to Read</option>\n                          )}\n                          {book.shelf === \"read\" ? (\n                            <option value=\"read\">✔️ Read</option>\n                          ) : (\n                            <option value=\"read\">Read</option>\n                          )}\n                          {book.shelf !== \"currentlyReading\" ||\n                          book.shekf !== \"read\" ||\n                          book.shelf !== \"wantToRead\" ? (\n                            <option value=\"none\">None</option>\n                          ) : (\n                            <option value=\"none\">✔️ None</option>\n                          )}\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"book-title\">{book.title}</div>\n                    {book.authors ? (\n                      <div className=\"book-authors\">\n                        {book.authors.map((author, index) => (\n                          <div key={index}>- {author}</div>\n                        ))}\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </motion.div>\n                )\n            )}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Read;\n","import React, { Component } from \"react\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport \"../App.css\";\nimport CurrentlyReading from \"./shelvs/CurrentlyReading\";\nimport WantToRead from \"./shelvs/WantToRead\";\nimport Read from \"./shelvs/Read\";\nimport { Link } from \"react-router-dom\";\n\nclass Home extends Component {\n  state = {\n    Books: [],\n  };\n\n  componentDidMount() {\n    BooksAPI.getAll().then((Books) => {\n      this.setState(() => ({\n        Books,\n      }));\n    });\n  }\n\n  changeShelvs = async (book, val) => {\n    await BooksAPI.update(book, val);\n\n    BooksAPI.getAll().then((Books) => {\n      this.setState(() => ({\n        Books,\n      }));\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"list-books-title\">\n          <h1>MyReads</h1>\n        </div>\n\n        <CurrentlyReading\n          Books={this.state.Books}\n          changeShelvs={this.changeShelvs}\n        />\n\n        <WantToRead Books={this.state.Books} changeShelvs={this.changeShelvs} />\n\n        <Read Books={this.state.Books} changeShelvs={this.changeShelvs} />\n\n        <div className=\"open-search\">\n          <Link to=\"/search\">\n            <button></button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Search from \"./components/Search\";\nimport Home from \"./components/Home\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport \"./App.css\";\n\nclass BooksApp extends React.Component {\n  state = {\n    query: \"\",\n    result: [],\n  };\n\n  changeShelvs = async (book, val) => {\n    await BooksAPI.update(book, val);\n    BooksAPI.getAll().then((Books) => {\n      this.setState({ Books });\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n\n            <Route path=\"/search\">\n              <Search\n                changeShelvs={this.changeShelvs}\n                resault={this.state.result}\n              />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}